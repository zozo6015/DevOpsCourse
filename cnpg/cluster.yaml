apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: mail
spec:
  instances: 3
  postgresql:
    parameters:
      shared_buffers: "1GB"
      
      # Effective cache size - estimate of OS cache available
      # ~70% of total memory
      effective_cache_size: "2.8GB"
      
      # Work memory - per operation (sort, hash)
      # Conservative to avoid OOM with multiple connections
      work_mem: "8MB"
      
      # Maintenance work memory (VACUUM, CREATE INDEX)
      maintenance_work_mem: "256MB"
      
      # Connection Settings
      max_connections: "100"  # Reduce if using connection pooler
      
      # WAL and Checkpoint Settings
      wal_buffers: "16MB"
      min_wal_size: "1GB"
      max_wal_size: "2GB"
      checkpoint_completion_target: "0.9"
      checkpoint_timeout: "15min"
      
      # Background Writer
      bgwriter_delay: "200ms"
      bgwriter_lru_maxpages: "100"
      bgwriter_lru_multiplier: "2.0"
      
      # Query Planner
      random_page_cost: "1.1"  # For SSD storage
      cpu_tuple_cost: "0.01"
      cpu_index_tuple_cost: "0.005"
      cpu_operator_cost: "0.0025"
      
      # Parallel Query Settings (limited with 2 cores)
      max_parallel_workers_per_gather: "1"
      max_parallel_workers: "2"
      max_parallel_maintenance_workers: "1"
      
      # Statement Timeout (prevent long-running queries)
      statement_timeout: "300s"
      
      # Logging
      log_statement: "ddl"
      log_duration: "off"
      log_min_duration_statement: "1000ms"  # Log slow queries
      log_checkpoints: "on"
      log_connections: "off"
      log_disconnections: "off"
      log_temp_files: "0"
      
      # Statistics
      track_activities: "on"
      track_counts: "on"
      track_io_timing: "on"
      track_functions: "pl"
      
      # Autovacuum (important for performance)
      autovacuum: "on"
      autovacuum_max_workers: "2"
      autovacuum_naptime: "1min"
      autovacuum_vacuum_threshold: "50"
      autovacuum_analyze_threshold: "50"
      autovacuum_vacuum_scale_factor: "0.1"
      autovacuum_analyze_scale_factor: "0.05"
      autovacuum_vacuum_cost_limit: "200"
      
      # Lock Management
      deadlock_timeout: "1s"
      lock_timeout: "0"
      
      # Other Performance Settings
      temp_buffers: "8MB"
      huge_pages: "off"  # Not typically available in containers

    pg_hba:
      # To access through TCP/IP you will need to get username
      # and password from the secret cluster-example-custom-app
      - host all all all md5
  pooler:
    enabled: true
    type: "pgbouncer"
    poolMode: "transaction"  # or "session" based on your needs
    parameters:
      max_client_conn: "1000"
      default_pool_size: "25"
#  monitoring:
#    enabled: true
#    customQueriesConfigMap:
#      - name: "pg-custom-queries"
#        key: "queries.yaml"
  # Example of rolling update strategy:
  # - unsupervised: automated update of the primary once all
  #                 replicas have been upgraded (default)
  # - supervised: requires manual supervision to perform
  #               the switchover of the primary
  primaryUpdateStrategy: unsupervised

  # Require 1Gi of space per instance using default storage class
  storage:
    size: 10Gi
  resources:
    requests:
      memory: "4Gi"
      cpu: "2"
    limits:
      memory: "4Gi"
      cpu: "2"
