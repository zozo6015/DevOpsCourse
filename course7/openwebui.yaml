apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: openweb-ui
spec:
  selector:
    matchLabels:
      app: openweb-ui # has to match .spec.template.metadata.labels
  serviceName: "openweb-ui"
  replicas: 3 # by default is 1
  template:
    metadata:
      labels:
        app: openweb-ui # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: openweb-ui
          image: ghcr.io/open-webui/open-webui:v0.6.5
          ports:
            - containerPort: 8080
              name: web
          volumeMounts:
            - name: openwebui
              mountPath: /app/backend/data
      volumes:
      - name: openwebui
        persistentVolumeClaim:
          claimName: openwebui
---
apiVersion: v1
kind: Service
metadata:
  name: openweb-ui
spec:
  selector:
    app: openweb-ui
  ports:
    - protocol: TCP
      port: 8080
      targetPort: web

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: openwebui
spec:
  accessModes:
    - ReadWriteMany
  volumeMode: Filesystem
  resources:
    requests:
      storage: 100Gi
  storageClassName: nfs

---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: openweb-ui
spec:
  hostnames:
    - ai.local
  parentRefs:
    - group: gateway.networking.k8s.io
      kind: Gateway
      name: eg
      namespace: kube-system
      sectionName: https
  rules:
    - backendRefs:
        - group: ''
          kind: Service
          name: openweb-ui
          port: 8080
          weight: 1
      matches:
        - path:
            type: PathPrefix
            value: /
